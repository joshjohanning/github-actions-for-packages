# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Publish NuGet Package

on:
  push:
    branches: 
      - nuget

env:
  PAT: ${{ secrets.PAT }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - name: nuget push
      #   run: |
      #     nugetfeed="github"
      #     nugetsource="https://nuget.pkg.github.com/soccerjoshj07/index.json"
      #     username="soccerjoshj07"

      #     # adding to ~/.config/NuGet/NuGet.config
      #     # nuget sources add -Name $nugetfeed -Source $nugetsource -username $username -password ${{ env.PAT }}
      #     # nuget setapikey ${{ secrets.GITHUB_TOKEN }} -source $nugetsource

      #     cat > nuget.config << EOF
      #     <?xml version="1.0" encoding="utf-8"?>
      #     <configuration>
      #         <packageSources>
      #             <clear />
      #             <add key="nuget" value="https://api.nuget.org/v3/index.json" />
      #             <add key="github" value="https://nuget.pkg.github.com/soccerjoshj07/index.json" />
      #         </packageSources>
      #         <packageSourceCredentials>
      #             <github>
      #                 <add key="Username" value="soccerjoshj07" />
      #                 <add key="ClearTextPassword" value="${{ env.PAT }}" />
      #             </github>
      #         </packageSourceCredentials>
      #     </configuration>
      #     EOF

      #     ls -a

      #     less nuget.config

      #     results=$(find . -name "*.nupkg")
      #     resultsArray=($results)

      #     #echo "${resultsArray[*]}"

      #     for var in "${resultsArray[@]}"
      #     do
      #         echo $var
      #         nuget push -Source $nugetfeed $var -ApiKey ${{ env.PAT }}
      #     done

      - name: Add NuGet sources
        run: |
          dotnet nuget add source https://nuget.pkg.github.com/soccerjoshj07/index.json --name github
      - name: NuGet push on GitHub
        run: dotnet nuget push "**/*.nupkg" --source github --api-key ${{ env.PAT }} --skip-duplicate

      - name: NuGet push on NuGet
        run: dotnet nuget push "**/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.PAT }} --skip-duplicate

      - name: Upload NuGet package
        uses: actions/upload-artifact@v2.2.1
        with:
          name: newton
          path: "**/*.nupkg"